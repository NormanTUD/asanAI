name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser x11-apps

      - name: Run Smoke Tests
        run: |
          sudo Xvfb :99 -ac &
          export DISPLAY=:99
          bash tests/smoke_tests

  playwright:
    needs: smoke-tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser x11-apps

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install --cask chromium
          brew install xvfb || true

      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install chromium

      - name: Remove sudo on Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          sed -i 's/sudo //g' docker.sh

      - name: Run Playwright Tests (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo Xvfb :99 -ac &
          export DISPLAY=:99
          bash run_tests --no-smoke-tests

      - name: Install PHP (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install php

      - name: Install Docker (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install --cask docker
          brew install colima
          colima start

      - name: Run Playwright Tests (macOS)
        if: runner.os == 'macOS'
        run: |
          Xvfb :99 -ac &
          export DISPLAY=:99
          bash run_tests --no-smoke-tests

      - name: Run Playwright Tests (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          bash run_tests --no-smoke-tests

      - name: Create a new version
        if: ${{ success() && matrix.os == 'ubuntu-latest' }}
        run: |
          echo "Creating new version"
          git tag ${{ github.run_number }} || true
          git push origin --tags || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
